---
apiVersion: v1
kind: Service
metadata:
  name: $SERVICE
  labels:
    app: $SERVICE
    tier: frontend
spec:
  type: ClusterIP
  ports:
    - port: 9042
      protocol: TCP
      targetPort: 9042
  selector:
    app: $SERVICE
    tier: frontend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: $SERVICE
  labels:
      monitor: $LABELS_MONITOR
spec:
  selector:
    matchLabels:
      app: $SERVICE
      tier: frontend
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: $SERVICE
        tier: frontend
        deployKey: '$DEPLOY_KEY'
    spec:
      nodeSelector:
        xxx: "true"
      tolerations:
      - effect: NoSchedule
        key: xxx
        operator: Equal
        value: "true"
      containers:
        - name: $SERVICE
          image: $IMAGE:$TAG
          imagePullPolicy: Always
          command:
            - /bin/xxx_consumer
          ports:
            - containerPort: 9042
              name: static-port
              protocol: TCP
          envFrom:
            - configMapRef:
                name: $SERVICE-configmap
            - secretRef:
                name: $SERVICE-token
          resources:
            limits:
              cpu: $CPU_LIMIT
              memory: $MEMORY_LIMIT
            requests:
              cpu: $CPU_REQUEST
              memory: $MEMORY_REQUEST
          livenessProbe:
            initialDelaySeconds: 10
            timeoutSeconds: 1
            periodSeconds: 5
            httpGet:
              path: /status
              port: 9042
          readinessProbe:
            initialDelaySeconds: 10
            timeoutSeconds: 1
            periodSeconds: 5
            httpGet:
              path: /status
              port: 9042
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: $SERVICE-hpa
  namespace: $K8S_NAMESPACE
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: $SERVICE
  minReplicas: $MIN_REPLICAS
  maxReplicas: $MAX_REPLICAS
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 60
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 60
      policies:
      - type: Pods
        value: 3
        periodSeconds: 15
      - type: Percent
        value: 100
        periodSeconds: 15
      selectPolicy: Min
    scaleUp:
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
